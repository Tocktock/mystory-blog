---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="My Personal Story Blog" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script>
			const theme = (() => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
					return 'dark';
				}
				return 'light';
			})();
			
			if (theme === 'dark') {
				document.documentElement.classList.add('dark');
			}
		</script>
	</head>
	<body>
		<header>
			<nav>
				<div class="nav-content">
					<a href="/" class="site-title">My Stories</a>
					<button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
						<svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<circle cx="12" cy="12" r="5"/>
							<line x1="12" y1="1" x2="12" y2="3"/>
							<line x1="12" y1="21" x2="12" y2="23"/>
							<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
							<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
							<line x1="1" y1="12" x2="3" y2="12"/>
							<line x1="21" y1="12" x2="23" y2="12"/>
							<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
							<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
						</svg>
						<svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
						</svg>
					</button>
				</div>
			</nav>
		</header>
		<main>
			<slot />
		</main>
		<footer>
			<p>&copy; {new Date().getFullYear()} My Story Blog. All rights reserved.</p>
		</footer>
	</body>
</html>

<script>
	const themeToggle = document.getElementById('theme-toggle');
	themeToggle?.addEventListener('click', () => {
		const isDark = document.documentElement.classList.toggle('dark');
		localStorage.setItem('theme', isDark ? 'dark' : 'light');
	});
</script>

<style is:global>
	:root {
		--text-color: #2d3748;
		--background-color: #ffffff;
		--accent-color: #5a67d8;
		--secondary-color: #718096;
		--border-color: #e2e8f0;
	}

	:root.dark {
		--text-color: #f7fafc;
		--background-color: #1a202c;
		--accent-color: #7c8fff;
		--secondary-color: #a0aec0;
		--border-color: #2d3748;
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		font-family: system-ui, -apple-system, sans-serif;
		background: var(--background-color);
		color: var(--text-color);
		transition: background-color 0.3s ease, color 0.3s ease;
	}

	body {
		max-width: 800px;
		margin: 0 auto;
		padding: 1rem;
		line-height: 1.6;
	}

	header {
		margin-bottom: 2rem;
	}

	nav {
		padding: 1rem 0;
		border-bottom: 1px solid var(--border-color);
	}

	.nav-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.site-title {
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--accent-color);
		text-decoration: none;
	}

	.theme-toggle {
		background: none;
		border: none;
		padding: 0.5rem;
		cursor: pointer;
		color: var(--text-color);
	}

	.theme-toggle svg {
		width: 24px;
		height: 24px;
	}

	.sun-icon {
		display: none;
	}

	.dark .moon-icon {
		display: none;
	}

	.dark .sun-icon {
		display: block;
	}

	main {
		min-height: calc(100vh - 180px);
	}

	footer {
		margin-top: 4rem;
		padding: 2rem 0;
		text-align: center;
		color: var(--secondary-color);
		border-top: 1px solid var(--border-color);
	}
</style>