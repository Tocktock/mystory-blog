---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const STORIES_PER_PAGE = 6;
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');
const searchQuery = Astro.url.searchParams.get('search') || '';

const allStories = await getCollection('stories');
const stories = allStories
	.filter(story => {
		if (!searchQuery) return true;
		
		const searchContent = `
			${story.data.title.toLowerCase()}
			${story.data.description.toLowerCase()}
			${story.body.toLowerCase()}
		`;
		
		return searchContent.includes(searchQuery.toLowerCase());
	})
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const totalPages = Math.ceil(stories.length / STORIES_PER_PAGE);
const startIndex = (currentPage - 1) * STORIES_PER_PAGE;
const endIndex = startIndex + STORIES_PER_PAGE;
const currentStories = stories.slice(startIndex, endIndex);
---

<Layout title="My Stories">
	<section class="stories">
		<h1>Welcome to My Story Blog</h1>
		<p class="intro">A collection of personal stories and experiences I'd like to share.</p>
		
		<form class="search-form" action="/" method="get">
			<input 
				type="search"
				name="search"
				placeholder="Search stories..."
				value={searchQuery}
				class="search-input"
			/>
			<button type="submit" class="search-button">Search</button>
			{searchQuery && (
				<a href="/" class="clear-search">Clear search</a>
			)}
		</form>

		{stories.length === 0 ? (
			<p class="no-results">No stories found matching your search.</p>
		) : (
			<div class="story-grid">
				{currentStories.map(story => (
					<article class="story-card">
						<a href={`/stories/${story.slug}`}>
							<h2>{story.data.title}</h2>
							<time datetime={story.data.publishDate.toISOString()}>
								{story.data.publishDate.toLocaleDateString('en-US', {
									year: 'numeric',
									month: 'long',
									day: 'numeric'
								})}
							</time>
							<p>{story.data.description}</p>
						</a>
					</article>
				))}
			</div>
		)}

		{totalPages > 1 && (
			<nav class="pagination" aria-label="Pagination">
				{currentPage > 1 && (
					<a href={`/?page=${currentPage - 1}${searchQuery ? `&search=${searchQuery}` : ''}`} class="pagination-link">
						Previous
					</a>
				)}
				<span class="page-info">
					Page {currentPage} of {totalPages}
				</span>
				{currentPage < totalPages && (
					<a href={`/?page=${currentPage + 1}${searchQuery ? `&search=${searchQuery}` : ''}`} class="pagination-link">
						Next
					</a>
				)}
			</nav>
		)}
	</section>
</Layout>

<style>
	.stories {
		padding: 2rem 0;
	}
	h1 {
		font-size: 2.5rem;
		margin-bottom: 1rem;
		color: var(--text-color);
	}
	.intro {
		font-size: 1.2rem;
		color: var(--secondary-color);
		margin-bottom: 2rem;
	}
	.search-form {
		margin-bottom: 3rem;
		display: flex;
		gap: 1rem;
		align-items: center;
	}
	.search-input {
		flex: 1;
		padding: 0.75rem 1rem;
		border: 1px solid var(--border-color);
		border-radius: 0.5rem;
		font-size: 1rem;
		background-color: var(--background-color);
		color: var(--text-color);
	}
	.search-input:focus {
		outline: none;
		border-color: var(--accent-color);
		box-shadow: 0 0 0 2px rgba(90, 103, 216, 0.1);
	}
	.search-button {
		padding: 0.75rem 1.5rem;
		background-color: var(--accent-color);
		color: white;
		border: none;
		border-radius: 0.5rem;
		font-size: 1rem;
		cursor: pointer;
		transition: background-color 0.2s ease;
	}
	.search-button:hover {
		background-color: color-mix(in srgb, var(--accent-color) 80%, black);
	}
	.clear-search {
		color: var(--secondary-color);
		text-decoration: none;
		font-size: 0.9rem;
	}
	.clear-search:hover {
		text-decoration: underline;
	}
	.no-results {
		text-align: center;
		color: var(--secondary-color);
		font-size: 1.1rem;
		margin: 3rem 0;
	}
	.story-grid {
		display: grid;
		gap: 2rem;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		margin-bottom: 3rem;
	}
	.story-card {
		border: 1px solid var(--border-color);
		border-radius: 0.5rem;
		transition: transform 0.2s ease;
		background-color: var(--background-color);
	}
	.story-card:hover {
		transform: translateY(-2px);
	}
	.story-card a {
		display: block;
		padding: 1.5rem;
		text-decoration: none;
		color: inherit;
	}
	.story-card h2 {
		font-size: 1.5rem;
		margin-bottom: 0.5rem;
		color: var(--accent-color);
	}
	.story-card time {
		display: block;
		font-size: 0.9rem;
		color: var(--secondary-color);
		margin-bottom: 1rem;
	}
	.story-card p {
		color: var(--text-color);
	}
	.pagination {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 1rem;
		margin-top: 2rem;
	}
	.pagination-link {
		padding: 0.5rem 1rem;
		border: 1px solid var(--border-color);
		border-radius: 0.25rem;
		color: var(--accent-color);
		text-decoration: none;
		transition: background-color 0.2s ease;
	}
	.pagination-link:hover {
		background-color: var(--border-color);
	}
	.page-info {
		color: var(--secondary-color);
	}
</style>