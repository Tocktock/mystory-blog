---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { collectTags, type TagEntry } from '../../utils/tags';
import '../../styles/tag-detail.css';

type Props = {
	tag: TagEntry;
};

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const tags = collectTags(posts);

	return tags.map((tag) => ({
		params: { tag: tag.slug },
		props: { tag },
	}));
}

const { tag } = Astro.props as Props;
const tagPosts = tag.posts as CollectionEntry<'blog'>[];
---

<!doctype html>
<html lang="ko">
  <head>
    <BaseHead
      title={`${tag.label} posts`}
      description={`Posts filed under ${tag.label}`}
      lang="ko"
    />
  </head>
  <body>
    <Header />
    <main class="tag-detail" aria-labelledby="tag-detail-title">
      <header class="tag-detail__header">
        <p class="tag-detail__breadcrumbs">
          <a href="/tags/">Tags</a>
          <span aria-hidden="true">/</span>
          <span>{tag.label}</span>
        </p>
        <h1 id="tag-detail-title">{tag.label}</h1>
        <p class="tag-detail__count">{tagPosts.length} posts</p>
      </header>

      <ul class="tag-detail__list">
        {tagPosts.map((post) => (
          <li>
            <a href={`/blog/${post.id}/`}>
              <h2>{post.data.title}</h2>
              <p>{post.data.description}</p>
              <time dateTime={post.data.pubDate.toISOString()}>
                <FormattedDate date={post.data.pubDate} />
              </time>
            </a>
          </li>
        ))}
      </ul>
    </main>
    <Footer />
  </body>
</html>
